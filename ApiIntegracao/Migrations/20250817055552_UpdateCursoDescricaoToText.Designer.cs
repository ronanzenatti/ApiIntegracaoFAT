// <auto-generated />
using System;
using ApiIntegracao.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiIntegracao.Migrations
{
    [DbContext(typeof(ApiIntegracaoDbContext))]
    [Migration("20250817055552_UpdateCursoDescricaoToText")]
    partial class UpdateCursoDescricaoToText
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ApiIntegracao.Models.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("EmailInstitucional")
                        .HasColumnType("longtext");

                    b.Property<int>("EstadoCivil")
                        .HasColumnType("int");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<Guid>("IdCettpro")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("MunicipioId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nacionalidade")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeMae")
                        .HasColumnType("longtext");

                    b.Property<string>("NomePai")
                        .HasColumnType("longtext");

                    b.Property<string>("NomeSocial")
                        .HasColumnType("longtext");

                    b.Property<int>("Raca")
                        .HasColumnType("int");

                    b.Property<string>("Rg")
                        .HasColumnType("longtext");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("ApiIntegracao.Models.AulaGerada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataAula")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DiaSemana")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("HoraFim")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time(6)");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("TurmaId");

                    b.ToTable("AulasGeradas");
                });

            modelBuilder.Entity("ApiIntegracao.Models.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CargaHoraria")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<Guid>("IdCettpro")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("IdPortalFat")
                        .HasMaxLength(50)
                        .HasColumnType("char(50)");

                    b.Property<Guid>("ModalidadeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("NomeCurso")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdCettpro")
                        .IsUnique()
                        .HasDatabaseName("IX_Cursos_IdCettpro");

                    b.HasIndex("IdPortalFat")
                        .HasDatabaseName("IX_Cursos_CodigoPortalFat");

                    b.ToTable("Cursos", (string)null);
                });

            modelBuilder.Entity("ApiIntegracao.Models.FrequenciaProcessada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataAula")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailsNaoIdentificados")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ProcessadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Sucesso")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TotalAusentes")
                        .HasColumnType("int");

                    b.Property<int>("TotalJustificados")
                        .HasColumnType("int");

                    b.Property<int>("TotalPresentes")
                        .HasColumnType("int");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("TurmaId");

                    b.ToTable("FrequenciasProcessadas");
                });

            modelBuilder.Entity("ApiIntegracao.Models.Matricula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataMatricula")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("IdCettpro")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdCettpro")
                        .IsUnique()
                        .HasDatabaseName("IX_Matriculas_IdCettpro");

                    b.HasIndex("TurmaId");

                    b.HasIndex("AlunoId", "TurmaId")
                        .IsUnique()
                        .HasDatabaseName("IX_Matriculas_AlunoTurma");

                    b.ToTable("Matriculas", (string)null);
                });

            modelBuilder.Entity("ApiIntegracao.Models.SyncLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ErroDetalhes")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("FimProcessamento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("InicioProcessamento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Operacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("QuantidadeProcessada")
                        .HasColumnType("int");

                    b.Property<bool>("Sucesso")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TipoEntidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("SyncLogs");
                });

            modelBuilder.Entity("ApiIntegracao.Models.Turma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataTermino")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("DisciplinaIdPortalFat")
                        .HasMaxLength(50)
                        .HasColumnType("char(50)");

                    b.Property<string>("DisciplinaNomePortalFat")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("IdCettpro")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("IdPortalFat")
                        .HasMaxLength(50)
                        .HasColumnType("char(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("IdCettpro")
                        .IsUnique()
                        .HasDatabaseName("IX_Turmas_IdCettpro");

                    b.ToTable("Turmas", (string)null);
                });

            modelBuilder.Entity("ApiIntegracao.Models.AulaGerada", b =>
                {
                    b.HasOne("ApiIntegracao.Models.Turma", "Turma")
                        .WithMany()
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("ApiIntegracao.Models.FrequenciaProcessada", b =>
                {
                    b.HasOne("ApiIntegracao.Models.Turma", "Turma")
                        .WithMany()
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("ApiIntegracao.Models.Matricula", b =>
                {
                    b.HasOne("ApiIntegracao.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiIntegracao.Models.Turma", "Turma")
                        .WithMany()
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("ApiIntegracao.Models.Turma", b =>
                {
                    b.HasOne("ApiIntegracao.Models.Curso", "Curso")
                        .WithMany("Turmas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("ApiIntegracao.Models.Curso", b =>
                {
                    b.Navigation("Turmas");
                });
#pragma warning restore 612, 618
        }
    }
}
